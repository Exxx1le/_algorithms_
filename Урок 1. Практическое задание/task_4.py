"""
Задание 4.
Для этой задачи:
1) придумайте 2-3 решения (обязательно с различной сложностью)
2) оцените сложность каждого выражения в этих решениях в нотации О-большое
3) оцените итоговую сложность каждого решения в нотации О-большое
4) сделайте вывод, какое решение эффективнее и почему
Сама задача:
Пользователи веб-ресурса проходят аутентификацию.
В системе хранятся логин, пароль и отметка об активации учетной записи.
Нужно реализовать проверку, может ли пользователь быть допущен к ресурсу.
При этом его учетка должна быть активирована.
А если нет, то польз-лю нужно предложить ее пройти.
Приложение должно давать ответы на эти вопросы
 и быть реализовано в виде функции.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, применить словарь.
Примечание: ПРОШУ ВАС ВНИМАТЕЛЬНО ЧИТАТЬ ЗАДАНИЕ!
"""
users = {'Вася': [345788798748, 'active'], 'Петя': [50088798748, 'not_active'], 'Коля': [400788798748, 'active'],
             'Женя': [450343, 'not_active']}

def user_checker(dictionary, login):  # O(1)

    try:
        dictionary[login]     # O(1)
        if dictionary[login][1] == 'not_active':
            return 'Access denied'  # O(1)
        else:
            return 'Access granted'  # O(1)
    except KeyError as f:
        print('Пользователь не найден')
        login_input = input('Введите логин для регистрации ')   # O(1)
        pswd_input = input('Введите пароль для регистрации ')   # O(1)
        dictionary.setdefault(login_input, [pswd_input, 'active'])    # O(1)


user_checker(users, 'жора')

print(users)