"""
Задание 1.
Вам нужно взять 5 любых скриптов, написанных ВАМИ в рамках работы над ДЗ
курсов Алгоритмы и Основы Python
На каждый скрипт нужно два решения - исходное и оптимизированное.
Вы берете исходное, пишете что это за задание и с какого оно курса.
Далее выполняете профилирование скрипта средствами memory_profiler
Вы оптимизируете исходное решение.
Далее выполняете профилирование скрипта средствами memory_profiler
Вам нужно написать аналитику, что вы сделали для оптимизации памяти и
чего добились.
ВНИМАНИЕ:
1) скрипты для оптимизации нужно брать только из сделанных вами ДЗ
курсов Алгоритмы и Основы
2) нельзя дублировать, коды, показанные на уроке
3) для каждого из 5 скриптов у вас отдельный файл, в нем должна быть версия до
и версия после оптимизации
4) желательно выбрать те скрипты, где есть что оптимизировать и не брать те,
где с памятью и так все в порядке
5) не нужно писать преподавателю '''я не могу найти что оптимизировать''', это
отговорки. Примеров оптимизации мы перечислили много: переход с массивов на
генераторы, numpy, использование слотов, применение del, сериализация и т.д.
Это файл для первого скрипта
"""

from memory_profiler import profile
from numpy import array


# исходная функция (урок 3 задание 1)

@profile
def list_create():
    new_list = []
    for i in range(1, 10000):
        new_list.append(i)
    return new_list


'''
Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    32     31.8 MiB     31.8 MiB           1   @profile
    33                                         def list_create():
    34     31.8 MiB      0.0 MiB           1       new_list = []
    35     31.8 MiB      0.0 MiB        1000       for i in range(1, 1000):
    36     31.8 MiB      0.0 MiB         999           new_list.append(i)
    37     31.8 MiB      0.0 MiB           1       return new_list
'''


@profile
def array_create():
    new_array = array([i for i in range(1, 10000)])
    return new_array


'''
Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    39     31.8 MiB     31.8 MiB           1   @profile
    40                                         def array_create():
    41     31.8 MiB      0.0 MiB        1002       new_array = array([i for i in range(1, 1000)])
    42     31.8 MiB      0.0 MiB           1       return new_array
'''

list_create()
array_create()

# заменил список на array, но никакой разницы в экономии памяти не обнаружил
